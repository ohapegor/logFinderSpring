<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">


    <http use-expressions="true">
        <intercept-url pattern="/*" access="permitAll()"/>
        <intercept-url pattern="/pages/secured/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>
        <intercept-url pattern="/pages/secured/adminPage.xhtml" access="hasRole('ROLE_ADMIN')"/>

        <form-login login-page="/loginSpringSecurity.jsp" default-target-url="/pages/home.xhtml"
                    authentication-failure-url="/pages/errorPage.xhtml"
                    login-processing-url="/spring_security_check"/>
        <logout logout-url="logout" logout-success-url="/pages/home.xhtml"/>
        <csrf disabled="true"/>
    </http>

    <authentication-manager>
        <authentication-provider>
          <!--  <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="SELECT email, password, enabled FROM users WHERE email = ?"
                               authorities-by-username-query="SELECT u.email, r.role FROM users u, user_roles r WHERE u.id = r.user_id AND u.email = ?"/>-->
                        <user-service>
                            <user name="spring" password="spring" authorities="ROLE_USER"/>
                            <user name="springAdmin" password="springAdmin" authorities="ROLE_ADMIN"/>
                        </user-service>
        </authentication-provider>
    </authentication-manager>
</beans:beans>